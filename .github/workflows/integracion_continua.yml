name: Python application  

on: [push] 

jobs:
  build: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyversion: ['3.8']
    services:
      postgres:
        image: postgres:14.2
        env:
          POSTGRES_USER: mate
          POSTGRES_PASSWORD: mate
          POSTGRES_DB: mates
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{matrix.pyversion}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.pyversion}}
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codacy-coverage
    - name: Run migrations
      run: python MakeAMate/manage.py makemigrations;python MakeAMate/manage.py migrate;python MakeAMate/manage.py collectstatic;
    - name: Set env
      run: echo "CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }}" >> $GITHUB_ENV
    - name: Run tests with coverage   
      run: cd MakeAMate;coverage run manage.py test; coverage xml;
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1.1.0
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: MakeAMate/coverage.xml
  deploy:
    if: ${{github.ref == 'refs/heads/despliegue-PPL'}} 
    needs: build
    runs-on: ubuntu-latest
    steps:
    - run: echo "ðŸ”Ž The name of your branch is ${{ github.ref }}."
    - uses: actions/checkout@v1
    - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "makeamate-ppl-deploy"
          heroku_email: "luctorgom@alum.us.es"
    - run: heroku run -a makeamate-ppl-deploy sh -c "python MakeAMate/manage.py shell -c \"from django.contrib.auth.models import User; User.objects.filter(username='makeamate.ISPP2022') or User.objects.create_superuser('makeamate.ISPP2022', 'admin@example.com', 'makeamate.ISPP2022')\""
